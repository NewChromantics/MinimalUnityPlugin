#include <dlfcn.h>
#include <android/log.h>
#include <iostream>


bool TryDlopen(const char* Filename)
{
	auto Handle = dlopen(Filename,RTLD_LAZY | RTLD_GLOBAL);
	if ( Handle )
	{
		__android_log_print(ANDROID_LOG_INFO, "MinimalCpp", "dlopen(%s) success!", Filename);
		return true;
	}
	auto Error = dlerror();
	std::cerr << "dlopen error " << Error << std::endl;
	//printf("dlopen error %s\n",Error);
	__android_log_print(ANDROID_LOG_INFO, "MinimalCpp", "dlopen(%s) error %s", Filename, Error);
	return false;
}
	 

extern "C" int __stdcall DlopenTest()
{
	if ( TryDlopen("Minimal.so") )	return 1;
	if ( TryDlopen("./Minimal.so") )	return 1;
	if ( TryDlopen(".lib/armeabi-v7a/Minimal.so") )	return 1;
	if ( TryDlopen("./lib/armeabi-v7a/Minimal.so") )	return 1;
	if ( TryDlopen("/lib/armeabi-v7a/Minimal.so") )	return 1;
	if ( TryDlopen("lib/Minimal.so") )	return 1;
	if ( TryDlopen(".lib/Minimal.so") )	return 1;
	if ( TryDlopen("./lib/Minimal.so") )	return 1;
	if ( TryDlopen("/lib/Minimal.so") )	return 1;
	if ( TryDlopen("lib/Minimal.so") )	return 1;
	__android_log_print(ANDROID_LOG_INFO, "MinimalCpp", "no dlopens worked");
	return 0;
}
	 
